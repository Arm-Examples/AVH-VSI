# This is a basic workflow to help you get started with Actions on CMSIS projects
# See also https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/infrastructure-for-continuous-integration-tests
#
# The repository needs to provide the following secrets
# - AWS_ACCESS_KEY_ID           The id of the access key.
# - AWS_SECRET_ACCESS_KEY       The access key secret.
# - AWS_DEFAULT_REGION          The data center region to be used.
# - AWS_S3_BUCKET_NAME          The name of the S3 storage bucket to be used for data exchange.
# - AWS_IAM_PROFILE             The IAM profile to be used.
# - AWS_SECURITY_GROUP_ID       The id of the security group to add the EC2 instance to.
# - AWS_SUBNET_ID               The id of the network subnet to connect the EC2 instance to.
# - ARM_UBL                     A bzip2 compressed and base64-encoded user based license file:
#                               armlm activate --server <URL> --product <PRODUCT> --as-user ubuntu --to-file ubuntu-ubl.binlic
#                               bzip2 -c ubuntu-ubl.binlic | base64 > ubuntu-ubl.binlic.bz2.b64

name: Arm Virtual Hardware hello_AVH example - github hosted - remote AWS via GH plugin
on:
# Uncomment the following lines to enable CI task trigger condition
#  push:
#    branches: [ main ]
#  pull_request:
#    paths:
#      - .github/workflows/hello_AVH.yml
#      - hello_vsi/source/**/*
#      - hello_vsi/target/**/*

# To allow you to run this workflow manually from the GitHub Actions tab add
  workflow_dispatch:

env:
  # Enable the next three lines if you are using IAM User and you added them in the repo's secret.
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
  AWS_IAM_PROFILE: ${{ secrets.AWS_IAM_PROFILE }}
  AWS_SECURITY_GROUP_ID: ${{ secrets.AWS_SECURITY_GROUP_ID }}
  AWS_SUBNET_ID: ${{ secrets.AWS_SUBNET_ID }}


jobs:
  ci_test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Install AVH Client for Python
      run: |
        pip install git+https://github.com/ARM-software/avhclient.git@v0.1
    - uses: ammaraskar/gcc-problem-matcher@master

    - name: Run [check 199 count] test for SSE300 platform
      run: |
        avhclient -b aws execute --specfile hello_vsi/avh_SSE300.yml
        count=$(grep -c "199" hello_vsi/hello_vsi.log)
        echo "Found '199' ${count} times in hello_vsi.log ..."
        if [[ $count < 1 ]]; then
          echo "... seems 199 is not included in the intdata.txt"
          exit 1
        fi
    - name: Archive results
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: |
          hello_vsi/hello_vsi.log
          hello_vsi/Objects/hello_vsi.axf
          hello_vsi/Objects/hello_vsi.axf.map
          hello_vsi/intdata.txt
        retention-days: 1
        if-no-files-found: error
      if: always()