name: hello_video_vsi Build

on:
  workflow_dispatch:

  pull_request:
    branches: [update-rte]
    paths:
      - hello_video_vsi/**
  push:
    branches: [update-rte]
    paths:
     - hello_video_vsi/**

  schedule:
    - cron: '00 22 * * 0'

jobs:
  CI:
    strategy:
      matrix:

        compiler: [
          {name: AC6,  ext: axf},
          {name: GCC,  ext: elf}
        ]

        target: [
          {type: Corstone_300,  model: FVP_Corstone_SSE-300,  board: mps3_board},
          {type: Corstone_310,  model: FVP_Corstone_SSE-310,  board: mps3_board},
        ]

        build: [
          {type: lcd_out},
        ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Activate vcpkg
        uses: ARM-software/cmsis-actions/vcpkg@v1

      - name: Activate Arm tool license
        uses: ARM-software/cmsis-actions/armlm@v1

      - name: Cache packs
        uses: actions/cache@v4
        with:
          key: cmsis-packs
          path: /home/runner/.cache/arm/packs

      # ----------------------------------------------------------------
      # Build executable for a specific target compiler pair
      # ----------------------------------------------------------------
      - name: Build context .${{ matrix.build.type }}+${{ matrix.target.type }} with ${{ matrix.compiler.name }}
        working-directory: ./hello_video_vsi
        run: |
            echo "Building Arm Virtual Hardware hello_video_vsi example with ${{ matrix.compiler.name }} by using the build-type ${{ matrix.build.type }} and the target type ${{ matrix.target.type }}..."

            cbuild hello_video_vsi.csolution.yml --packs --rebuild \
                --context hello_video_vsi.${{ matrix.build.type }}+${{ matrix.target.type }} \
                --toolchain ${{ matrix.compiler.name }} \
                | tee hello_video_vsi.${{ matrix.build.type }}+${{ matrix.target.type }}_${{ matrix.compiler.name }}.build.log

      # ----------------------------------------------------------------
      # Upload build log
      # ----------------------------------------------------------------
      - name: Upload build log for context .${{ matrix.build.type }}+${{ matrix.target.type }}_${{ matrix.compiler.name }}
        uses: actions/upload-artifact@v4
        with:
          name: hello_video_vsi.${{ matrix.build.type }}+${{ matrix.target.type }}_${{ matrix.compiler.name }}.build.log
          path: |
            ./hello_video_vsi/hello_video_vsi.${{ matrix.build.type }}+${{ matrix.target.type }}_${{ matrix.compiler.name }}.build.log
            ./hello_video_vsi/tmp/hello_video_vsi.${{ matrix.build.type }}+${{ matrix.target.type }}/src/hello_video_vsi.${{ matrix.build.type }}+${{ matrix.target.type }}-stamp/hello_video_vsi.${{ matrix.build.type }}+${{ matrix.target.type }}-configure-*.log

      # ----------------------------------------------------------------
      # Directory structure of the project folder
      # ----------------------------------------------------------------
      - name: Directory structure of ./hello_video_vsi folder
        run: |
              echo "Diagnosis"
              tree ./hello_video_vsi
